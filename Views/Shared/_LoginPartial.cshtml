@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark d-none" asp-area="Identity" asp-page="/Account/Manage/Index"
                title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0"> <img
                        src="~/img/power-off-solid.svg" /></button>
            </form>
        </li>
    }
    else
    {
        <div class="d-flex p-2 d-none ">
            <div class="nav-item mx-3">
                <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Cr√©er un
                    compte</a>
            </div>
            <div class="nav-item">
                <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Se connecter</a>
            </div>
        </div>
    }
</ul>
